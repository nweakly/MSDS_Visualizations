<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AvgLabor (LaborStats)' inline='true' name='federated.0qd6da113prhcj1266jc71ogiu4w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LaborStats' name='excel-direct.1ucst8m135tp5v1bbsbcy06i2diu'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='E:/Dropbox/RU DataScience/MSDS650/Week4/Assignement/LaborForce/LaborStats.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ucst8m135tp5v1bbsbcy06i2diu' name='AvgLabor' table='[AvgLabor$]' type='table'>
          <columns gridOrigin='A1:AC45:no:A1:AC45:1' header='no' lost='0' outcome='1' processed='1188'>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='Indicator' ordinal='1' />
            <column datatype='real' name='1990' ordinal='2' />
            <column datatype='real' name='1991' ordinal='3' />
            <column datatype='real' name='1992' ordinal='4' />
            <column datatype='real' name='1993' ordinal='5' />
            <column datatype='real' name='1994' ordinal='6' />
            <column datatype='real' name='1995' ordinal='7' />
            <column datatype='real' name='1996' ordinal='8' />
            <column datatype='real' name='1997' ordinal='9' />
            <column datatype='real' name='1998' ordinal='10' />
            <column datatype='real' name='1999' ordinal='11' />
            <column datatype='real' name='2000' ordinal='12' />
            <column datatype='real' name='2001' ordinal='13' />
            <column datatype='real' name='2002' ordinal='14' />
            <column datatype='real' name='2003' ordinal='15' />
            <column datatype='real' name='2004' ordinal='16' />
            <column datatype='real' name='2005' ordinal='17' />
            <column datatype='real' name='2007' ordinal='18' />
            <column datatype='real' name='2008' ordinal='19' />
            <column datatype='real' name='2009' ordinal='20' />
            <column datatype='real' name='2010' ordinal='21' />
            <column datatype='real' name='2011' ordinal='22' />
            <column datatype='real' name='2012' ordinal='23' />
            <column datatype='real' name='2013' ordinal='24' />
            <column datatype='real' name='2014' ordinal='25' />
            <column datatype='real' name='2015' ordinal='26' />
            <column datatype='real' name='2016' ordinal='27' />
            <column datatype='real' name='2017' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1990</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1990]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1990</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1991</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1991]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1991</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1992</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1992]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1992</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1993</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1993]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1993</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1994</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1994]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1994</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1995]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1995</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1996</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1996]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1996</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1997</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1997]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1997</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1998</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1998]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1998</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1999</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1999]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>1999</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AvgLabor]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AC45:no:A1:AC45:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1188</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (County,Indicator)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:County:nk]' />
          <groupfilter function='level-members' level='[none:Indicator:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.107325' measure-ordering='alphabetic' measure-percentage='0.892675' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='AvgLabor (LaborStats)' name='federated.0qd6da113prhcj1266jc71ogiu4w' />
          </datasources>
          <datasource-dependencies datasource='federated.0qd6da113prhcj1266jc71ogiu4w'>
            <column datatype='real' name='[1990]' role='measure' type='quantitative' />
            <column datatype='real' name='[1991]' role='measure' type='quantitative' />
            <column datatype='real' name='[1992]' role='measure' type='quantitative' />
            <column datatype='real' name='[1993]' role='measure' type='quantitative' />
            <column datatype='real' name='[1994]' role='measure' type='quantitative' />
            <column datatype='real' name='[1995]' role='measure' type='quantitative' />
            <column datatype='real' name='[1996]' role='measure' type='quantitative' />
            <column datatype='real' name='[1997]' role='measure' type='quantitative' />
            <column datatype='real' name='[1998]' role='measure' type='quantitative' />
            <column datatype='real' name='[1999]' role='measure' type='quantitative' />
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column datatype='real' name='[2001]' role='measure' type='quantitative' />
            <column datatype='real' name='[2002]' role='measure' type='quantitative' />
            <column datatype='real' name='[2003]' role='measure' type='quantitative' />
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[1990]' derivation='Sum' name='[sum:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1991]' derivation='Sum' name='[sum:1991:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1992]' derivation='Sum' name='[sum:1992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1993]' derivation='Sum' name='[sum:1993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1994]' derivation='Sum' name='[sum:1994:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1995]' derivation='Sum' name='[sum:1995:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1996]' derivation='Sum' name='[sum:1996:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1997]' derivation='Sum' name='[sum:1997:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1998]' derivation='Sum' name='[sum:1998:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1999]' derivation='Sum' name='[sum:1999:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2001]' derivation='Sum' name='[sum:2001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2002]' derivation='Sum' name='[sum:2002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2003]' derivation='Sum' name='[sum:2003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1991:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1992:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1994:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1995:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1996:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1997:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1998:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1999:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2001:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2002:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2005:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2010:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2017:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:County:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Northern Colorado Total&quot;' />
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Weld County&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Indicator:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;Total Employed&quot;' />
                <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;Total Unemployed&quot;' />
                <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;Unemployment Rate&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]</column>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</column>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qd6da113prhcj1266jc71ogiu4w].[Multiple Values]</rows>
        <cols>([federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk] / [federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='AvgLabor (LaborStats)' name='federated.0qd6da113prhcj1266jc71ogiu4w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qd6da113prhcj1266jc71ogiu4w'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qd6da113prhcj1266jc71ogiu4w].[Longitude (generated)]' field-type='quantitative' max='-11170720.441692276' min='-12175284.096893653' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qd6da113prhcj1266jc71ogiu4w].[Latitude (generated)]' field-type='quantitative' max='5080509.0701668095' min='4585197.1268788679' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]' />
              <geometry column='[federated.0qd6da113prhcj1266jc71ogiu4w].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qd6da113prhcj1266jc71ogiu4w].[Latitude (generated)]</rows>
        <cols>[federated.0qd6da113prhcj1266jc71ogiu4w].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='TableByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='AvgLabor (LaborStats)' name='federated.0qd6da113prhcj1266jc71ogiu4w' />
          </datasources>
          <datasource-dependencies datasource='federated.0qd6da113prhcj1266jc71ogiu4w'>
            <column datatype='real' name='[1990]' role='measure' type='quantitative' />
            <column datatype='real' name='[1991]' role='measure' type='quantitative' />
            <column datatype='real' name='[1992]' role='measure' type='quantitative' />
            <column datatype='real' name='[1993]' role='measure' type='quantitative' />
            <column datatype='real' name='[1994]' role='measure' type='quantitative' />
            <column datatype='real' name='[1995]' role='measure' type='quantitative' />
            <column datatype='real' name='[1996]' role='measure' type='quantitative' />
            <column datatype='real' name='[1997]' role='measure' type='quantitative' />
            <column datatype='real' name='[1998]' role='measure' type='quantitative' />
            <column datatype='real' name='[1999]' role='measure' type='quantitative' />
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column datatype='real' name='[2001]' role='measure' type='quantitative' />
            <column datatype='real' name='[2002]' role='measure' type='quantitative' />
            <column datatype='real' name='[2003]' role='measure' type='quantitative' />
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[1990]' derivation='Sum' name='[sum:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1991]' derivation='Sum' name='[sum:1991:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1992]' derivation='Sum' name='[sum:1992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1993]' derivation='Sum' name='[sum:1993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1994]' derivation='Sum' name='[sum:1994:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1995]' derivation='Sum' name='[sum:1995:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1996]' derivation='Sum' name='[sum:1996:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1997]' derivation='Sum' name='[sum:1997:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1998]' derivation='Sum' name='[sum:1998:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1999]' derivation='Sum' name='[sum:1999:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2001]' derivation='Sum' name='[sum:2001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2002]' derivation='Sum' name='[sum:2002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2003]' derivation='Sum' name='[sum:2003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1991:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1992:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1994:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1995:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1996:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1997:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1998:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:1999:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2001:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2002:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2005:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2010:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qd6da113prhcj1266jc71ogiu4w].[sum:2017:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[Exclusions (County,Indicator)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:County:nk]' />
                <groupfilter function='level-members' level='[none:Indicator:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Adams County&quot;' />
                <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;Unemployment Rate&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:County:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Northern Colorado Total&quot;' />
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Weld County&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Indicator:nk]' />
              <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;Unemployment Rate&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]</column>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[Exclusions (County,Indicator)]</column>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]</column>
            <column>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qd6da113prhcj1266jc71ogiu4w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk] / [federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk])</rows>
        <cols>[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='TableByCounty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Weld County&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</field>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[:Measure Names]</field>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</field>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:Indicator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qd6da113prhcj1266jc71ogiu4w].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      0QHtcz7sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      D0uq5qQS77deAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TableByCounty' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
